var redis = require("redis"),
	client,
	redis2json = require("../../deps/redis2json"),
	karacos = require('karacos'),
	log4js = require('log4js')(), logger;
logger = log4js.getLogger('karacos:wrapper');
redis2json.redis = redis;

getClient = function() {
	if (typeof client === "undefined") {
		client = redis.createClient(1338, "127.0.0.1");
	}
	return client;
};

redis2json.client = getClient();

exports.get = function(id, callback) {
	var val,
		doc, map, variable, model;
	logger.debug("get:get id:" + id);	
	getClient().get(id, function(err, res) {
		var variable;
		logger.debug("get:get res:" + res + " err:" + err);
		if (err !== "null") {
			val = res;
			if (val in karacos.model) {
				model = karacos.model[val],
				map = model.prototype.map;
				variable = {id: id};
				logger.debug("get: model:");
				//console.log(model);
				logger.debug("get: map:");
				console.log(map);
				logger.debug("get: variable:");
				//console.log(variable);
				
				redis2json.load(map, variable, function (error, result) {
					logger.debug("get:Redis2json load, result:" + result);
					//console.log(result);
					if (typeof callback !== "undefined")
						callback(undefined, new model(result));
				});
			} else {
				if (typeof callback !== "undefined")
					callback(undefined, val);
			}
		} else {
			if (typeof callback !== "undefined")
				callback(err);
		}
	});
};

exports.getClient = getClient;